{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React_learning\\\\taxslabs\\\\src\\\\Component\\\\InputValue.js\";\nimport React, { Component } from \"react\";\nvar forBody = {\n  border: \"1px solid black\",\n  width: \"450px\",\n  minHeight: \" 410px\",\n  padding: \"5px\",\n  backgroundColor: \"#FFA07A\",\n  borderRadius: \"20px 20px\",\n  marginLeft: \"25px\",\n  marginTop: \"10px\"\n};\nvar forInput = {\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  border: \"1px solid blue\",\n  width: \"300px\",\n  padding: \"5px\",\n  backgroundColor: \"#8B0000\",\n  color: \"white\"\n};\nvar forAdd = {\n  border: \"1px solid red\",\n  width: \"100px\",\n  backgroundColor: \"#20B2AA\",\n  padding: \"5px\"\n};\nvar forDlt = {\n  border: \"1px solid red\",\n  width: \"160px\",\n  backgroundColor: \"#20B2AA\",\n  padding: \"10px\"\n};\nvar forTable = {\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  border: \"1px solid black\",\n  width: \"411px\",\n  padding: \"5px\",\n  backgroundColor: \"#E0FFFF\"\n};\nvar forThead = {\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  border: \"1px solid black\",\n  width: \"150px\",\n  padding: \"5px\",\n  backgroundColor: \"#E0FFFF\"\n};\nvar forTrow = {\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  border: \"1px solid blue\",\n  width: \"300px\",\n  padding: \"5px\",\n  backgroundColor: \"#E0FFFF\"\n};\n\nclass InputsValue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = event => {\n      const newText = event.target.value; // created own variable and targeted input tag.\n\n      this.setState({\n        text: newText // replaced empty text with new variable\n\n      });\n    };\n\n    this.clickFun = () => {\n      var myText = this.state.text; //created my own variable, and triggered the empty text obejct.\n\n      var myNewtextArray = this.state.emptyArray; // created my own variable, and triggered emptyarray from the state object.\n\n      myNewtextArray.push(myText); //with the new variable, push the value in to the text object.\n\n      this.setState({\n        // finally set the state with empty array.\n        text: \"\",\n        emptyArray: myNewtextArray\n      });\n    };\n\n    this.deleteTdata = index => {\n      var deletArray = this.state.emptyArray; // created my own variable triggered with state empty array\n\n      deletArray.splice(index, 1);\n      this.setState({\n        emptyArray: deletArray\n      });\n    };\n\n    this.state = {\n      text: \"\",\n      // empty text for input value\n      emptyArray: [] // setting an empty array\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: forBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: forInput,\n      type: \"text\",\n      value: this.state.text,\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: forAdd,\n      onClick: this.clickFun,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"ADD\"), /*#__PURE__*/React.createElement(\"table\", {\n      style: forTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      style: forThead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"SI\"), /*#__PURE__*/React.createElement(\"th\", {\n      style: forThead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"NAME\"), /*#__PURE__*/React.createElement(\"th\", {\n      style: forThead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"OPTIONS\")), this.state.emptyArray.map((str, index // I have to ask this with NR\n    ) =>\n    /*#__PURE__*/\n    React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: forTrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, index + 1)), /*#__PURE__*/React.createElement(\"td\", {\n      style: forTrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, str)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: forDlt,\n      onClick: () => this.deleteTdata(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, \"Delete\")))))));\n  }\n\n} //   constructor(props) {\n//     super(props);\n//     this.state = {\n//       inputValue: 0,\n//     };\n//   }\n//   setCurrentText = (event) => {\n//     let inputNewvalue = event.target.value;\n//     this.setState({\n//       inputValue: inputNewvalue,\n//     });\n//   };\n//   basicSalary = (event) => {\n//     let inputValue = this.state.inputValue;\n//     let baseSalary = inputValue / 2;\n//     this.setState({ inputValue: baseSalary });\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <div>\n//           <input\n//             type=\"number\"\n//             placeholder=\"enter CTC\"\n//             onChange={this.setCurrentText}\n//           />\n//           <input type=\"number\" placeholder=\"enter Annual Rent\" />\n//           {/* <input type=\"number\" placeholder=\"enter 80C value\" />\n//           <input type=\"number\" placeholder=\"enter 80D value\" />\n//           <input type=\"number\" placeholder=\"enter Stand. deduction\" />\n//           <input type=\"text\" placeholder=\"Metro City ? YES/NO\" /> */}\n//           <p>{this.state.inputNewvalue}</p>\n//         </div>\n//         <div>\n//           <button onClick={this.basicSalary}>Calculate Tax</button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default InputsValue;","map":{"version":3,"sources":["D:/Learning/React_learning/taxslabs/src/Component/InputValue.js"],"names":["React","Component","forBody","border","width","minHeight","padding","backgroundColor","borderRadius","marginLeft","marginTop","forInput","color","forAdd","forDlt","forTable","forThead","forTrow","InputsValue","constructor","props","handleOnChange","event","newText","target","value","setState","text","clickFun","myText","state","myNewtextArray","emptyArray","push","deleteTdata","index","deletArray","splice","render","map","str"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nvar forBody = {\r\n  border: \"1px solid black\",\r\n  width: \"450px\",\r\n  minHeight: \" 410px\",\r\n  padding: \"5px\",\r\n  backgroundColor: \"#FFA07A\",\r\n  borderRadius: \"20px 20px\",\r\n  marginLeft: \"25px\",\r\n  marginTop: \"10px\",\r\n};\r\n\r\nvar forInput = {\r\n  marginTop: \"10px\",\r\n  marginLeft: \"10px\",\r\n  border: \"1px solid blue\",\r\n  width: \"300px\",\r\n  padding: \"5px\",\r\n  backgroundColor: \"#8B0000\",\r\n  color: \"white\",\r\n};\r\n\r\nvar forAdd = {\r\n  border: \"1px solid red\",\r\n  width: \"100px\",\r\n  backgroundColor: \"#20B2AA\",\r\n  padding: \"5px\",\r\n};\r\n\r\nvar forDlt = {\r\n  border: \"1px solid red\",\r\n  width: \"160px\",\r\n  backgroundColor: \"#20B2AA\",\r\n  padding: \"10px\",\r\n};\r\n\r\nvar forTable = {\r\n  marginTop: \"10px\",\r\n  marginLeft: \"10px\",\r\n  border: \"1px solid black\",\r\n  width: \"411px\",\r\n  padding: \"5px\",\r\n  backgroundColor: \"#E0FFFF\",\r\n};\r\n\r\nvar forThead = {\r\n  marginTop: \"10px\",\r\n  marginLeft: \"10px\",\r\n  border: \"1px solid black\",\r\n  width: \"150px\",\r\n  padding: \"5px\",\r\n  backgroundColor: \"#E0FFFF\",\r\n};\r\n\r\nvar forTrow = {\r\n  marginTop: \"10px\",\r\n  marginLeft: \"10px\",\r\n  border: \"1px solid blue\",\r\n  width: \"300px\",\r\n  padding: \"5px\",\r\n  backgroundColor: \"#E0FFFF\",\r\n};\r\n\r\nclass InputsValue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: \"\", // empty text for input value\r\n      emptyArray: [], // setting an empty array\r\n    };\r\n  }\r\n\r\n  handleOnChange = (event) => {\r\n    const newText = event.target.value; // created own variable and targeted input tag.\r\n\r\n    this.setState({\r\n      text: newText, // replaced empty text with new variable\r\n    });\r\n  };\r\n  clickFun = () => {\r\n    var myText = this.state.text; //created my own variable, and triggered the empty text obejct.\r\n    var myNewtextArray = this.state.emptyArray; // created my own variable, and triggered emptyarray from the state object.\r\n\r\n    myNewtextArray.push(myText); //with the new variable, push the value in to the text object.\r\n\r\n    this.setState({\r\n      // finally set the state with empty array.\r\n      text: \"\",\r\n      emptyArray: myNewtextArray,\r\n    });\r\n  };\r\n\r\n  deleteTdata = (index) => {\r\n    var deletArray = this.state.emptyArray; // created my own variable triggered with state empty array\r\n    deletArray.splice(index, 1);\r\n\r\n    this.setState({\r\n      emptyArray: deletArray,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={forBody}>\r\n        <div>\r\n          <input\r\n            style={forInput}\r\n            type=\"text\"\r\n            value={this.state.text}\r\n            onChange={this.handleOnChange}\r\n          />\r\n          <button style={forAdd} onClick={this.clickFun}>\r\n            ADD\r\n          </button>\r\n          <table style={forTable}>\r\n            <tr>\r\n              <th style={forThead}>SI</th>\r\n              <th style={forThead}>NAME</th>\r\n              <th style={forThead}>OPTIONS</th>\r\n            </tr>\r\n\r\n            {this.state.emptyArray.map((\r\n              str,\r\n              index // I have to ask this with NR\r\n            ) => (\r\n              <tr>\r\n                <td style={forTrow}>\r\n                  <center>{index + 1}</center>\r\n                </td>\r\n                <td style={forTrow}>\r\n                  {\" \"}\r\n                  <center>{str}</center>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    style={forDlt}\r\n                    onClick={() => this.deleteTdata(index)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       inputValue: 0,\r\n//     };\r\n//   }\r\n//   setCurrentText = (event) => {\r\n//     let inputNewvalue = event.target.value;\r\n\r\n//     this.setState({\r\n//       inputValue: inputNewvalue,\r\n//     });\r\n//   };\r\n//   basicSalary = (event) => {\r\n//     let inputValue = this.state.inputValue;\r\n//     let baseSalary = inputValue / 2;\r\n//     this.setState({ inputValue: baseSalary });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"enter CTC\"\r\n//             onChange={this.setCurrentText}\r\n//           />\r\n//           <input type=\"number\" placeholder=\"enter Annual Rent\" />\r\n//           {/* <input type=\"number\" placeholder=\"enter 80C value\" />\r\n//           <input type=\"number\" placeholder=\"enter 80D value\" />\r\n//           <input type=\"number\" placeholder=\"enter Stand. deduction\" />\r\n//           <input type=\"text\" placeholder=\"Metro City ? YES/NO\" /> */}\r\n//           <p>{this.state.inputNewvalue}</p>\r\n//         </div>\r\n//         <div>\r\n//           <button onClick={this.basicSalary}>Calculate Tax</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default InputsValue;\r\n"]},"metadata":{},"sourceType":"module"}