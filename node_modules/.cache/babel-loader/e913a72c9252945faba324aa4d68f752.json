{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React_learning\\\\taxslabs\\\\src\\\\Component\\\\InputValue.js\";\nimport React, { Component } from \"react\"; // class InputsValue extends Component {\n//   const = (this.state = {\n//     inputValue: \"\",\n//   });\n//   handleChange = (event) => {\n//     this.setState({ inputValue: event.target.value });\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <div>\n//           <input\n//             type=\"number\"\n//             placeholder=\"enter CTC\"\n//             onClick={this.handleChange}\n//           />\n//           {/* <input type=\"number\" placeholder=\"enter Annual Rent\" />\n//           <input type=\"number\" placeholder=\"enter 80C value\" />\n//           <input type=\"number\" placeholder=\"enter 80D value\" />\n//           <input type=\"number\" placeholder=\"enter Stand. deduction\" />\n//           <input type=\"text\" placeholder=\"Metro City ? YES/NO\" /> */}\n//           <p>{this.state.inputValue}</p>\n//         </div>\n//         <div>\n//           <button onClick={this.handleChange}>Calculate Tax</button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nclass InputsValue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, this.state.isToggleOn ? \"ON\" : \"OFF\");\n  }\n\n}\n\nexport default InputsValue;","map":{"version":3,"sources":["D:/Learning/React_learning/taxslabs/src/Component/InputValue.js"],"names":["React","Component","InputsValue","constructor","props","state","isToggleOn","handleClick","bind","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb,CAFiB,CAIjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAeJ,KAAD,KAAY;AACxBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADK,KAAZ,CAAd;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,CADF;AAKD;;AArBiC;;AAuBpC,eAAeJ,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// class InputsValue extends Component {\r\n//   const = (this.state = {\r\n//     inputValue: \"\",\r\n//   });\r\n\r\n//   handleChange = (event) => {\r\n//     this.setState({ inputValue: event.target.value });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"enter CTC\"\r\n//             onClick={this.handleChange}\r\n//           />\r\n//           {/* <input type=\"number\" placeholder=\"enter Annual Rent\" />\r\n//           <input type=\"number\" placeholder=\"enter 80C value\" />\r\n//           <input type=\"number\" placeholder=\"enter 80D value\" />\r\n//           <input type=\"number\" placeholder=\"enter Stand. deduction\" />\r\n//           <input type=\"text\" placeholder=\"Metro City ? YES/NO\" /> */}\r\n\r\n//           <p>{this.state.inputValue}</p>\r\n//         </div>\r\n//         <div>\r\n//           <button onClick={this.handleChange}>Calculate Tax</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\nclass InputsValue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isToggleOn: true };\r\n\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState((state) => ({\r\n      isToggleOn: !state.isToggleOn,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.handleClick}>\r\n        {this.state.isToggleOn ? \"ON\" : \"OFF\"}\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default InputsValue;\r\n"]},"metadata":{},"sourceType":"module"}