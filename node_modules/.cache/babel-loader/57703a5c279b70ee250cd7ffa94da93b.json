{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React_learning\\\\taxslabs\\\\src\\\\Component\\\\InputValue.js\";\nimport React, { Component } from \"react\";\n\nclass InputsValue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurrentText = event => {\n      let newText = event.target.value;\n      this.setState({\n        currentText: newText\n      });\n    };\n\n    this.changeTextArray = () => {\n      let myCurrentText = this.state.currentText;\n      let currentTextArray = this.state.textArray; //write if condition here\n\n      currentTextArray.push(myCurrentText);\n      this.setState({\n        currentText: \"\",\n        textArray: currentTextArray\n      });\n    };\n\n    this.deleteElement = index => {\n      let currentArry = this.state.textArray;\n      currentArry.splice(index, 1);\n      this.setState({\n        currentTextArray: currentArry\n      });\n    };\n\n    this.state = {\n      currentText: \"\",\n      textArray: []\n    };\n  }\n\n  render() {\n    //2\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.currentText,\n      onChange: this.setCurrentText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeTextArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"SI\"), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Option\")), this.state.textArray.map((str, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, str), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.deleteElement(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \" \", \"Delete\", \" \")))));\n  }\n\n} //   constructor(props) {\n//     super(props);\n//     this.state = {\n//       inputValue: 0,\n//     };\n//   }\n//   handleChange = (event) => {\n//     this.setState({ inputValue: event.target.value });\n//   };\n//   basicSalary = (event) => {\n//     let inputValue = this.state.inputValue;\n//     let baseSalary = inputValue / 2;\n//     this.setState({ inputValue: baseSalary });\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <div>\n//           <input\n//             type=\"number\"\n//             placeholder=\"enter CTC\"\n//             onChange={this.handleChange}\n//           />\n//           <input type=\"number\" placeholder=\"enter Annual Rent\" />\n//           {/* <input type=\"number\" placeholder=\"enter 80C value\" />\n//           <input type=\"number\" placeholder=\"enter 80D value\" />\n//           <input type=\"number\" placeholder=\"enter Stand. deduction\" />\n//           <input type=\"text\" placeholder=\"Metro City ? YES/NO\" /> */}\n//           <p>{this.state.inputValue}</p>\n//           <p>{this.state.inputValue}</p>\n//         </div>\n//         <div>\n//           <button onClick={this.basicSalary}>Calculate Tax</button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default InputsValue;","map":{"version":3,"sources":["D:/Learning/React_learning/taxslabs/src/Component/InputValue.js"],"names":["React","Component","InputsValue","constructor","props","setCurrentText","event","newText","target","value","setState","currentText","changeTextArray","myCurrentText","state","currentTextArray","textArray","push","deleteElement","index","currentArry","splice","render","border","map","str"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass InputsValue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentText: \"\",\r\n      textArray: [],\r\n    };\r\n  }\r\n\r\n  setCurrentText = (event) => {\r\n    let newText = event.target.value;\r\n\r\n    this.setState({\r\n      currentText: newText,\r\n    });\r\n  };\r\n\r\n  changeTextArray = () => {\r\n    let myCurrentText = this.state.currentText;\r\n\r\n    let currentTextArray = this.state.textArray;\r\n    //write if condition here\r\n\r\n    currentTextArray.push(myCurrentText);\r\n\r\n    this.setState({\r\n      currentText: \"\",\r\n      textArray: currentTextArray,\r\n    });\r\n  };\r\n\r\n  deleteElement = (index) => {\r\n    let currentArry = this.state.textArray;\r\n    currentArry.splice(index, 1);\r\n\r\n    this.setState({\r\n      currentTextArray: currentArry,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //2\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.currentText}\r\n          onChange={this.setCurrentText}\r\n        />\r\n\r\n        <button onClick={this.changeTextArray}>Add</button>\r\n\r\n        <table>\r\n          <tr>\r\n            <th style={{ border: \"1px solid black\" }}>SI</th>\r\n            <th style={{ border: \"1px solid black\" }}>Name</th>\r\n            <th style={{ border: \"1px solid black\" }}>Option</th>\r\n          </tr>\r\n          {this.state.textArray.map((str, index) => (\r\n            <tr>\r\n              <td style={{ border: \"1px solid black\" }}>{index + 1}</td>\r\n              <td style={{ border: \"1px solid black\" }}>{str}</td>\r\n              <button onClick={() => this.deleteElement(index)}>\r\n                {\" \"}\r\n                Delete{\" \"}\r\n              </button>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       inputValue: 0,\r\n//     };\r\n//   }\r\n\r\n//   handleChange = (event) => {\r\n//     this.setState({ inputValue: event.target.value });\r\n//   };\r\n//   basicSalary = (event) => {\r\n//     let inputValue = this.state.inputValue;\r\n//     let baseSalary = inputValue / 2;\r\n//     this.setState({ inputValue: baseSalary });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"enter CTC\"\r\n//             onChange={this.handleChange}\r\n//           />\r\n//           <input type=\"number\" placeholder=\"enter Annual Rent\" />\r\n//           {/* <input type=\"number\" placeholder=\"enter 80C value\" />\r\n//           <input type=\"number\" placeholder=\"enter 80D value\" />\r\n//           <input type=\"number\" placeholder=\"enter Stand. deduction\" />\r\n//           <input type=\"text\" placeholder=\"Metro City ? YES/NO\" /> */}\r\n//           <p>{this.state.inputValue}</p>\r\n//           <p>{this.state.inputValue}</p>\r\n//         </div>\r\n//         <div>\r\n//           <button onClick={this.basicSalary}>Calculate Tax</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default InputsValue;\r\n"]},"metadata":{},"sourceType":"module"}